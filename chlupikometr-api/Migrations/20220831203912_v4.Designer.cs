// <auto-generated />
using System;
using Chlupikometr;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Chlupikometr.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220831203912_v4")]
    partial class v4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Chlupikometr.Chlupik.Entity.Chlupik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AvatarId")
                        .HasColumnType("integer")
                        .HasColumnName("avatar_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int>("Points")
                        .HasColumnType("integer")
                        .HasColumnName("points");

                    b.HasKey("Id")
                        .HasName("pk_chlupik");

                    b.HasIndex("AvatarId")
                        .HasDatabaseName("ix_chlupik_avatar_id");

                    b.ToTable("chlupik", (string)null);
                });

            modelBuilder.Entity("Chlupikometr.Inventory.Entity.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_inventory");

                    b.ToTable("inventory", (string)null);
                });

            modelBuilder.Entity("Chlupikometr.Inventory.Entity.InventoryLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InventoryId")
                        .HasColumnType("integer")
                        .HasColumnName("inventory_id");

                    b.Property<int>("Reward")
                        .HasColumnType("integer")
                        .HasColumnName("reward");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_inventory_level");

                    b.HasIndex("InventoryId")
                        .HasDatabaseName("ix_inventory_level_inventory_id");

                    b.ToTable("inventory_Level");
                });

            modelBuilder.Entity("Chlupikometr.Ledger.Entity.Ledger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChlupikId")
                        .HasColumnType("integer")
                        .HasColumnName("chlupik_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime>("EnteredAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("entered_at");

                    b.Property<int>("Reward")
                        .HasColumnType("integer")
                        .HasColumnName("reward");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("title");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<string>("UserNote")
                        .HasColumnType("text")
                        .HasColumnName("user_note");

                    b.HasKey("Id")
                        .HasName("pk_ledger");

                    b.HasIndex("ChlupikId")
                        .HasDatabaseName("ix_ledger_chlupik_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_ledger_user_id");

                    b.ToTable("ledger", (string)null);
                });

            modelBuilder.Entity("Chlupikometr.System.File.Entity.S3File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("external_id");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_file");

                    b.ToTable("file", (string)null);
                });

            modelBuilder.Entity("Chlupikometr.User.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("text")
                        .HasColumnName("picture_url");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("Chlupikometr.Chlupik.Entity.Chlupik", b =>
                {
                    b.HasOne("Chlupikometr.System.File.Entity.S3File", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_chlupik_file_avatar_id");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("Chlupikometr.Inventory.Entity.InventoryLevel", b =>
                {
                    b.HasOne("Chlupikometr.Inventory.Entity.Inventory", "Inventory")
                        .WithMany("Levels")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_inventory_level_inventory_inventory_id");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("Chlupikometr.Ledger.Entity.Ledger", b =>
                {
                    b.HasOne("Chlupikometr.Chlupik.Entity.Chlupik", "Chlupik")
                        .WithMany()
                        .HasForeignKey("ChlupikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_ledger_chlupik_chlupik_id");

                    b.HasOne("Chlupikometr.User.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_ledger_user_user_id");

                    b.Navigation("Chlupik");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Chlupikometr.Inventory.Entity.Inventory", b =>
                {
                    b.Navigation("Levels");
                });
#pragma warning restore 612, 618
        }
    }
}
